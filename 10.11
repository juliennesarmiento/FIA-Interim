#!/bin/bash

#######################

reset

if [ "$EUID" -ne 0 ] ; then
  printf "\e[31mPlease run as root!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  exit
fi

if [ -e /etc/redhat-release ] ; then
  printf "\e[1mRunning Scan for "
  printf "$(cat /etc/redhat-release)"
  printf "\e[0m\n"
else
  printf "\e[31m\e[1mYou are not on a Red Hat System!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  kill -9 $PPID
fi

function ctrl_C() {
  kill -9 $PPID  
}

function ctrl_Z() {
  kill -9 $PPID
}

trap ctrl_C INT
trap ctrl_Z 2 20

######################

#10.11 Set Idle Timeout Interval for User Login
printf "Checking if ClientAliveInterval is set to 300:\n"
if grep "^ClientAliveInterval[[:space:]]300" "/etc/ssh/sshd_config"; then
    printf "\e[32mNo remediation needed\e[0m\n"       
else
    sed -i 's/^#ClientAliveInterval 0/ClientAliveInterval 300/' /etc/ssh/sshd_config
    printf "\e[32mClientAliveInterval is set to 300\e[0m\n"       
fi

printf "Checking if ClientAliveCountMax is set to 0:\n"
if grep  "^ClientAliveCountMax[[:space:]]0" "/etc/ssh/sshd_config"; then   
    printf "\e[32mNo remediation needed\e[0m\n"    
else
    sed -i 's/^#ClientAliveCountMax 3/ClientAliveCountMax 0/' /etc/ssh/sshd_config
    printf "\e[32mClientAliveCountMax is set to 0\e[0m\n"
fi


printf "\e[32mCompleted!\n"
printf "Press any key to exit\e[0m\n"

#This kills the process, please remove if not needed.

read -n 1 -s
kill -9 $PPID
