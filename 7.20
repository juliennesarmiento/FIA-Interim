#!/bin/bash

#######################

reset

if [ "$EUID" -ne 0 ] ; then
  printf "\e[31mPlease run as root!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  exit
fi

if [ -e /etc/redhat-release ] ; then
  printf "\e[1mRunning Scan for "
  printf "$(cat /etc/redhat-release)"
  printf "\e[0m\n"
else
  printf "\e[31m\e[1mYou are not on a Red Hat System!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  kill -9 $PPID
fi

function ctrl_C() {
  kill -9 $PPID  
}

function ctrl_Z() {
  kill -9 $PPID
}

trap ctrl_C INT
trap ctrl_Z 2 20

######################

#7.20


clear
bold=$(tput bold)
normal=$(tput sgr0)

printf "\n \033[0;30m${bold}7.20 Check That Reserved UIDs Are Assigned to only System Accounts${normal} \n\n"
#All System Accounts
checkUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon usbmuxd rtkit abrt saslauth pulse postfix tcpdump"
#Checks that reserved UIDs are assigned to system accounts
cat /etc/passwd | awk -F : '($3 < 500) {print $1, $3}' | while read user uid; do found=0
for tUser in ${checkUsers}
	do
		if [ ${user} = ${tUser} ]; then
		found=1
		fi
	done
	if [ $found -eq 0 ]; then
	echo "User $user has a reserved UID ($uid)."
	fi
done


printf "\e[32mCompleted!\n"
printf "Press any key to exit\e[0m\n"

#This kills the process, please remove if not needed.

read -n 1 -s
kill -9 $PPID
