#!/bin/bash

#######################

reset

if [ "$EUID" -ne 0 ] ; then
  printf "\e[31mPlease run as root!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  exit
fi

if [ -e /etc/redhat-release ] ; then
  printf "\e[1mRunning Scan for "
  printf "$(cat /etc/redhat-release)"
  printf "\e[0m\n"
else
  printf "\e[31m\e[1mYou are not on a Red Hat System!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  kill -9 $PPID
fi

function ctrl_C() {
  kill -9 $PPID  
}

function ctrl_Z() {
  kill -9 $PPID
}

trap ctrl_C INT
trap ctrl_Z 2 20

######################

#6.1.3

printf "Checking if appropriate logging is set: "

if (cat /etc/rsyslog.conf | grep "auth,user.* /var/log/messages" >/dev/null) || (cat /etc/rsyslog.conf | grep "kern.* /var/log/kern.log" >/dev/null) || (cat /etc/rsyslog.conf | grep "daemon.* /var/log/daemon.log" >/dev/null) || (cat /etc/rsyslog.conf | grep "syslog.* /var/log/daemon.log" >/dev/null) || (cat /etc/rsyslog.conf | grep "lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.* /var/log/unused.log") ; then
	printf "\e[32mPASS\e[0m\n"
else
	printf "\e[31mFAIL\e[0m\n"
fi

printf "\e[32mCompleted!\n"
printf "Press any key to exit\e[0m\n"

#This kills the process, please remove if not needed.

read -n 1 -s
kill -9 $PPID
