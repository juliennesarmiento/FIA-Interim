#!/bin/bash

#######################

reset

if [ "$EUID" -ne 0 ] ; then
  printf "\e[31mPlease run as root!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  exit
fi

if [ -e /etc/redhat-release ] ; then
  printf "\e[1mRunning Scan for "
  printf "$(cat /etc/redhat-release)"
  printf "\e[0m\n"
else
  printf "\e[31m\e[1mYou are not on a Red Hat System!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  kill -9 $PPID
fi

function ctrl_C() {
  kill -9 $PPID  
}

function ctrl_Z() {
  kill -9 $PPID
}

trap ctrl_C INT
trap ctrl_Z 2 20

######################

#9.5 Set User,Group Owner and Permission for etc cron(hourly,daily,weekly,monthly)
printf "\e[0m Checking if /etc/cron.hourly file has the correct permissions \n"
if ls -ld /etc/cron.hourly | grep drwx------ >/dev/null; then # Grep the permissions from ls -l /etc/cron.hourly to ensure permissions is correct and remove the output with "/dev/null"
	printf "\033[33;32m PASS \n"
else
	printf "\033[33;31m FAIL \n"
fi

printf "\e[0m Checking if /etc/cron.daily file has the correct permissions \n"
if ls -ld /etc/cron.daily | grep drwx------ >/dev/null; then # Grep the permissions from ls -ld /etc/cron.daily to ensure permissions is correct and remove the output with "/dev/null"
	printf "\033[33;32m PASS \n"
else
	printf "\033[33;31m FAIL \n"
fi

printf "\e[0m Checking if /etc/cron.weekly file has the correct permissions \n"
if ls -ld /etc/cron.weekly | grep drwx------ >/dev/null; then  # Grep the permissions from ls -ld /etc/cron.weekly to ensure permissions is correct and remove the output with "/dev/null"
	printf "\033[33;32m PASS \n"
else
	printf "\033[33;31m FAIL \n"
fi

printf "\e[0m Checking if /etc/cron.monthly file has the correct permissions \n"
if ls -ld /etc/cron.monthly | grep drwx------ >/dev/null; then # Grep the permissions from ls -ld /etc/cron.monthly to ensure permissions is correct and remove the output with "/dev/null"
	printf "\033[33;32m PASS \n"
else
	printf "\033[33;31m FAIL \n"
fi
echo  -en "\e[0m"

printf "\e[32mCompleted!\n"
printf "Press any key to exit\e[0m\n"

#This kills the process, please remove if not needed.

read -n 1 -s
kill -9 $PPID
