#!/bin/bash

#######################

reset

if [ "$EUID" -ne 0 ] ; then
  printf "\e[31mPlease run as root!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  exit
fi

if [ -e /etc/redhat-release ] ; then
  printf "\e[1mRunning Scan for "
  printf "$(cat /etc/redhat-release)"
  printf "\e[0m\n"
else
  printf "\e[31m\e[1mYou are not on a Red Hat System!\n"
  printf "Press any key to exit\e[0m\n"
  read -n 1 -s
  kill -9 $PPID
fi

function ctrl_C() {
  kill -9 $PPID  
}

function ctrl_Z() {
  kill -9 $PPID
}

trap ctrl_C INT
trap ctrl_Z 2 20

######################

#7.12


clear
bold=$(tput bold)
normal=$(tput sgr0)

printf "\n \033[0;30m${bold}7.12 Check Permissions on User Home Directories${normal} \n\n"
#For loop to get accounts that can log in interactively to the system
for RESULT in `cat /etc/passwd | egrep -v '(root|halt|sync|shutdown)' |awk -F: '($7!="/usr/sbin/nologin" && $7!="/sbin/nologin" && $7!="/bin/false") { print $6 }'`; do
resultperm=$(ls -ld $RESULT)
#Checks that 6th character of permissions is not 'w'
if [[ ` echo $resultperm | grep "^......w..." ` ]]; then 
	echo "Fail, Group Write permission is set on directory $RESULT"
else
	echo "Pass, Group Write permission is not set on directory $RESULT"
fi
#Checks that 8th character of permissions is '-'
if [[ ` echo $resultperm | grep "^.......-.." `  ]]; then
	echo "Pass, Other Read permission is not set on directory $RESULT"
else
	echo "Fail, Other Read permission is set on directory $RESULT"
fi
#Checks that 9th character of permissions is '-'
if [[ `echo $resultperm | grep "^........-."` ]]; then
	echo "Pass, Other Write permission is not set on directory $RESULT"
else
	echo "Fail, Other Write permission is set on directory $RESULT"
fi
#Check that 10th character of permissions is '-'
if [[ `echo $resultperm | grep "^.........-"` ]]; then
	echo "Pass, Other Execute permission is not set on directory $RESULT"
else
	echo "Fail, Other Execute permission is set on directory $RESULT"
fi
done


printf "\e[32mCompleted!\n"
printf "Press any key to exit\e[0m\n"

#This kills the process, please remove if not needed.

read -n 1 -s
kill -9 $PPID
